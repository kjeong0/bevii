{"version":3,"sources":["meteor://ğŸ’»app/sefydp.js"],"names":[],"mappings":"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","file":"/sefydp.js","sourcesContent":["Matches = new Mongo.Collection(\"matches\");\n\nif (Meteor.isClient) {\n    Meteor.subscribe(\"userStatus\");\n    Meteor.subscribe(\"matches\");\n\n    Session.setDefault('userSelection', null);\n\n    Template.rps.helpers({\n        userSelection: () => {\n            return Session.get('userSelection');\n        },\n        userInMatch: () => {\n            /* Returns true if the user is currently in a RPS match.\n             */\n            return Matches.find({\n                $or: [\n                    {playerOne: Meteor.user().username},\n                    {playerTwo: Meteor.user().username}\n                ]\n            }).count() > 0;\n        },\n        matches: () => {\n            return Matches.find({\n                $or: [\n                    {playerOne: Meteor.user().username},\n                    {playerTwo: Meteor.user().username}\n                ]\n            });\n        },\n        waitingForOtherPlayer: function() {\n            /* Returns true if opponent still has to make a move */\n            var otherPlayer = Meteor.user().username === this.playerOne ? this.playerTwo : this.playerOne;\n            var match = Matches.find(this._id);\n            return this[otherPlayer] === undefined;\n        },\n        makeMove: function() {\n            /* Return true if the player still has to make a move */\n            return this[Meteor.user().username] === undefined;\n        }\n    });\n\n    Template.rps.events({\n        'click .rps': function(event) {\n            // Add a key indicating the user's choice and checks for winner if possible\n            var updateQuery = {$set: {}};\n            var choice = event.target.value;\n            updateQuery.$set[Meteor.user().username + \".choice\"] = event.target.value;\n            Matches.update(this._id, updateQuery);\n\n            var otherPlayer = Meteor.user().username === this.playerOne ? this.playerTwo : this.playerOne;\n            if(this[otherPlayer] !== undefined) {\n                /* Really ugly way to find the winner, refactor this later */\n                var getWinner = function(playerOneName, playerTwoName) {\n                    var playerOneChoice = choice;\n                    var playerTwoChoice = this[playerTwoName].choice;\n                    if ((playerOneChoice === \"rock\" && playerTwoChoice ===\"scissors\") ||\n                        (playerOneChoice === \"scissors\" && playerTwoChoice ===\"paper\") ||\n                        (playerOneChoice === \"paper\" && playerTwoChoice ===\"rock\")) {\n                        Matches.update(this._id, {$set: {winner: playerOneName}});\n                    } else if ((playerTwoChoice === \"rock\" && playerOneChoice ===\"scissors\") ||\n                               (playerTwoChoice === \"scissors\" && playerOneChoice ===\"paper\") ||\n                               (playerTwoChoice === \"paper\" && playerOneChoice ===\"rock\")) {\n                        Matches.update(this._id, {$set: {winner: playerTwoName}});\n                    } else {\n                        Matches.update(this._id, {$set: {winner: \"tie\"}});\n                    }\n                }.bind(this);\n                getWinner(Meteor.user().username, otherPlayer);\n            }\n        }\n    });\n\n    Template.userCount.helpers({\n        usersOnline: () => {\n            return Meteor.users.find({\"status.online\": true, _id: {$ne: Meteor.userId()}});\n        },\n        usersOnlineCount: () => {\n            return Meteor.users.find({ \"status.online\": true}).count();\n        }\n    });\n\n    Template.userCount.events({\n        \"click .user\": function(event) {\n            console.log(event);\n            console.log(this);\n\n            var thisPlayer = Meteor.user().username;\n            var otherPlayer = event.target.value;\n\n            Matches.insert({\n                playerOne: thisPlayer,\n                playerTwo: otherPlayer\n            });\n\n        }\n    });\n\n    Accounts.ui.config({\n        passwordSignupFields: \"USERNAME_ONLY\"\n    });\n}\n\nif (Meteor.isServer) {\n    Meteor.startup(function () {\n        Meteor.publish(\"userStatus\", () => {\n            return Meteor.users.find({\"status.online\": true});\n        });\n        Meteor.publish(\"matches\", () => {\n            return Matches.find();\n        });\n    });\n}\n"]}